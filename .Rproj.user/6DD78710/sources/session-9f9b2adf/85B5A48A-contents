rm(list = ls())

library(doParallel)

source(file = "~/Documents/Dr.Wermuth/Rpackages/NCor/R/NCor.R")

load(file = "/Users/lukaswermuth/Library/CloudStorage/Dropbox/Pohle Wermuth/NominalCorrelation/Results/Simulations/True_gammas/gammas_3x3SU.RData")
load(file = "/Users/lukaswermuth/Library/CloudStorage/Dropbox/Pohle Wermuth/NominalCorrelation/Results/Simulations/True_gammas/gammas_3x3UU.RData")
load(file = "/Users/lukaswermuth/Library/CloudStorage/Dropbox/Pohle Wermuth/NominalCorrelation/Results/Simulations/True_gammas/gammas_MultNorm.RData")
load(file = "/Users/lukaswermuth/Library/CloudStorage/Dropbox/Pohle Wermuth/NominalCorrelation/Results/Simulations/True_gammas/gammas_MultCauchy.RData")
load(file = "/Users/lukaswermuth/Library/CloudStorage/Dropbox/Pohle Wermuth/NominalCorrelation/Results/Simulations/True_gammas/gammas_RegNorm.RData")
load(file = "/Users/lukaswermuth/Library/CloudStorage/Dropbox/Pohle Wermuth/NominalCorrelation/Results/Simulations/True_gammas/gammas_RegCauchy.RData")

MC <- 1000
alpha <- 0.1
SampleSizes <- c(50, 200, 800)

## Regression normal
rhos <- (seq(0, 1, length.out = 100))^2 * 4
coverage_RegNorm <- array(data = NA, dim = c(length(SampleSizes), MC, length(rhos)), dimnames = list(SampleSizes, 1:MC, rhos))

k <- 0
for (rho in rhos){
  k <- k + 1
  Start_Time <- Sys.time()
  for (n in SampleSizes){
    for (i in 1:MC) {
      print(c(rho, n, i))
      set.seed(i)
      X <- sample(c("A", "B", "C"), n, prob = c(1/3, 1/3, 1/3), replace = TRUE)
      C_ind <- ifelse(X == "C", 1, 0)
      B_ind <- ifelse(X == "B", 1, 0)
      Y <- rho * B_ind - rho * C_ind + rnorm(n)
      res <- NCor(X, Y, nominal = "r", CIs = TRUE, Test = FALSE)
      coverage_RegNorm[as.character(n), as.character(i), as.character(rho)] <- as.numeric(data.table::between(gammas_RegNorm[k], res[[1]][2], res[[1]][3]))
    }
  }
  End_Time <- Sys.time()
  End_Time - Start_Time
}

save(coverage_RegNorm, file = "/Users/lukaswermuth/Library/CloudStorage/Dropbox/Pohle Wermuth/NominalCorrelation/Results/Simulations/Coverage/coverage_RegNorm.RData")


## Regression Cauchy
rhos <- (seq(0, 1, length.out = 100))^3 * 40

cl <- makeCluster(detectCores() - 1, type = "PSOCK")
registerDoParallel(cl)
on.exit(parallel::stopCluster(cl))


## Multinomial Normal
rhos <- (seq(0, 1, length.out = 100))^2 * 9

cl <- makeCluster(detectCores() - 1, type = "PSOCK")
registerDoParallel(cl)
on.exit(parallel::stopCluster(cl))


## Multinomial Cauchy
rhos <- (seq(0, 1, length.out = 100))^2 * 9

cl <- makeCluster(detectCores() - 1, type = "PSOCK")
registerDoParallel(cl)
on.exit(parallel::stopCluster(cl))










