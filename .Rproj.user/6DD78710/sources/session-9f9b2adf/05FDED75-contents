rm(list = ls())

source(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Rpackages/NCor/R/NCor.R")
invisible(lapply(list.files("/Users/lukaswermuth/Library/CloudStorage/Dropbox/Pohle Wermuth/NominalCorrelation/replication_NCor/results/Simulations/True_gammas", pattern = "\\.RData$", full.names = TRUE), function(x) load(x, envir = globalenv())))
results_folder <- "/Users/lukaswermuth/Library/CloudStorage/Dropbox/Pohle Wermuth/NominalCorrelation/replication_NCor/results/Simulations/Coverage"

library(arrangements)
library(rstatix)
library(foreach)
library(readxl)
library(doParallel)
library(DescTools)
library(compositions)
library(mvtnorm)

# Parameter Specifications ------------------------------------------------
MC <- 1000
SampleSizes <- c(50, 200, 800)
categories <- c("A", "B", "C")

# Regression Normal -------------------------------------------------------
rhos <- (seq(0, 1, length.out = 100))^2 * 4
decision_wermuth_array <- array(data = NA, dim = c(length(SampleSizes), MC, length(rhos)), dimnames = list(SampleSizes, 1:MC, rhos))

for (rho in rhos){
  for (n in SampleSizes){
    for (i in 1:MC){
      print(c(rho, n, i))
      XY <- Gen_RegressionDGP(n, rho, i, Inf) # Generates data according to specified DGP
      res <- NCor(XY[,1], XY[,2], nominal = "r", CIs = TRUE, Test = FALSE)[[1]]
      decision_wermuth_array[as.character(n),as.character(i),as.character(rho)] <- as.numeric(data.table::between(gammas_RegNorm[as.character(rho)], res[2], res[3]))
    }
  }
}

save(decision_wermuth_array, file = paste(results_folder, "RegNormal_CIs.RData", sep = "/"))

# Regression Cauchy -------------------------------------------------------
rhos <- (seq(0, 1, length.out = 100))^3 * 40
decision_wermuth_array <- array(data = NA, dim = c(length(SampleSizes), MC, length(rhos)), dimnames = list(SampleSizes, 1:MC, rhos))

for (rho in rhos){
  for (n in SampleSizes){
    for (i in 1:MC){
      print(c(rho, n, i))
      XY <- Gen_RegressionDGP(n, rho, i, 1) # Generates data according to specified DGP
      res <- NCor(XY[,1], XY[,2], nominal = "r", CIs = TRUE, Test = FALSE)[[1]]
      decision_wermuth_array[as.character(n),as.character(i),as.character(rho)] <- as.numeric(data.table::between(gammas_RegCauchy[as.character(rho)], res[2], res[3]))
    }
  }
} 

save(decision_wermuth_array, file = paste(results_folder, "RegCauchy_CIs.RData", sep = "/"))


## Multinomial Logit DGP: Normal covariate
rhos <- (seq(0, 1, length.out = 100))^2 * 9
decision_wermuth_array <- array(data = NA, dim = c(length(SampleSizes), MC, length(rhos)), dimnames = list(SampleSizes, 1:MC, rhos))

for (rho in rhos){
  for (n in SampleSizes){
    for (i in 1:MC){
      print(c(rho, n, i))
      XY <- Gen_MultinomialDGP(n, rho, i, Inf) # Generates data according to specified DGP
      res <- NCor(XY[,2], XY[,1], nominal = "r", CIs = TRUE, Test = FALSE)[[1]]
      decision_wermuth_array[as.character(n),as.character(i),as.character(rho)] <- as.numeric(data.table::between(gammas_MultNorm[as.character(rho)], res[2], res[3]))
    }
  }
} 

save(decision_wermuth_array, file = paste(results_folder, "MultNormal_CIs.RData", sep = "/"))

## Multinomial Logit DGP: Cauchy covariate
rhos <- (seq(0, 1, length.out = 100))^2 * 9
decision_wermuth_array <- array(data = NA, dim = c(length(SampleSizes), MC, length(rhos)), dimnames = list(SampleSizes, 1:MC, rhos))

for (rho in rhos){
  for (n in SampleSizes){
    for (i in 1:MC){
      print(c(rho, n, i))
      XY <- Gen_MultinomialDGP(n, rho, i, 1) # Generates data according to specified DGP
      res <- NCor(XY[,2], XY[,1], nominal = "r", CIs = TRUE, Test = FALSE)[[1]]
      decision_wermuth_array[as.character(n),as.character(i),as.character(rho)] <- as.numeric(data.table::between(gammas_MultCauchy[as.character(rho)], res[2], res[3]))
    }
  }
}

save(decision_wermuth_array, file = paste(results_folder, "MultCauchy_CIs.RData", sep = "/"))


